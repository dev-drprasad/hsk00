on: 
  push: 
    branches:
      - main
  pull_request:

name: Test

jobs:
  create_release:
    name: Create Github Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  test:
    needs: create_release
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-20.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Install Ubuntu Dependencies
      run: sudo apt clean && sudo apt update && sudo apt install build-essential libgtk-3-dev libwebkit2gtk-4.0-dev
      if: ${{ matrix.os == 'ubuntu-20.04' }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Project Dep
      run: |
        go mod download
        go get github.com/markbates/pkger/cmd/pkger
    - name: Pkger
      run: |
        pkger -include /assets -o ./cmd
        pkger -include /assets
      env:
        GO111MODULE: on
    - name: Build CLI
      run: go build -o hsk00-cli ./cmd/*
      if: ${{ matrix.os != 'windows-latest' }}
    - name: Build Windows CLI
      run: cd cmd && go build -o ..\hsk00-cli.exe
      if: ${{ matrix.os == 'windows-latest' }}
      continue-on-error: true
    - name: Install Wails
      run: go get -u github.com/wailsapp/wails/cmd/wails
    - name: Setup Account
      run: mkdir -p ~/.wails && echo '{"email":"dev.drprasad@aim.com","name":"REDDY PRASAD"}' > ~/.wails/wails.json
    - name: Build GUI
      run: wails build -p
    - name: Make DMG
      run: npx create-dmg ./build/hsk00.app ./build
      continue-on-error: true
      if: ${{ matrix.os == 'macos-latest' }}
    - name: Upload OSX CLI
      id: upload-osx-cli 
      uses: actions/upload-release-asset@v1
      if: ${{ matrix.os == 'macos-latest' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./hsk00-cli
        asset_name: hsk00-osx-cli
        asset_content_type: application/octet-stream
    - name: Upload Linux CLI
      id: upload-linux-cli 
      uses: actions/upload-release-asset@v1
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./hsk00-cli
        asset_name: hsk00-linux-cli
        asset_content_type: application/octet-stream
    - name: Upload Windows CLI
      id: upload-windows-cli
      continue-on-error: true
      if: ${{ matrix.os == 'windows-latest' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./hsk00-cli.exe
        asset_name: hsk00-windows-cli.exe
        asset_content_type: application/octet-stream
    - name: Upload OSX GUI
      id: upload-osx-gui
      if: ${{ matrix.os == 'macos-latest' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./build/hsk00 0.1.0.dmg
        asset_name: hsk00-osx.dmg
        asset_content_type: application/octet-stream
    - name: Upload Linux GUI
      id: upload-linux-gui
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./build/hsk00
        asset_name: hsk00-linux-gui
        asset_content_type: application/octet-stream
    - name: Upload Windows GUI
      id: upload-windows-gui
      if: ${{ matrix.os == 'windows-latest' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./build/hsk00.exe
        asset_name: hsk00-windows.exe
        asset_content_type: application/octet-stream



# https://github.com/actions/create-release/issues/14#issuecomment-555379810
